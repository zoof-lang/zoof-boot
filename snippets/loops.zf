#### exec: the compiler helps - fail
for
#### output
-- SyntaxError (E1461) ----------------------------------------------- snippet:1

Found a lonely 'for' keyword.

1| for
   ^^^

For-loops in Zoof always iterate a variable over a sequence.

The syntax for 'for' has two forms. The (multi-line) statement form, e.g.:

    for i in 0:10 do
        print i

And the (single-line) expression form, e.g.:

    # Note that this form is still a work in progress
    print for i in 0:10 its i
#### end



#### exec: the compiler helps - fail
while
#### output
-- SyntaxError (E1174) ----------------------------------------------- snippet:1

Found a lonely 'while' keyword.

1| while
   ^^^^^

The syntax for 'while' loops is similar to other languages, e.g.:

    i = 0
    while i < 10 do
        i = i + 1
        print i

There is *no* (single-line) expression form for while loops.
#### end



#### exec: for-loop over range
for i in 1:6 do
    print i
#### output
1.0
2.0
3.0
4.0
5.0
#### end



#### exec: for-loop over range of floats
for i in 1.4:6:0.5 do
    print i
# todo: yuk!  ->  for i in 1.4 : 6 : 0.5  seems cleaner
#### output
1.4
1.9
2.4
2.9
3.4
3.9
4.4
4.9
5.4
5.9
#### end



#### exec: while-loop
i = 0
while i < 5 do
    i = i + 1
    print i
#### output
1.0
2.0
3.0
4.0
5.0
#### end



#### exec: loop repeat n times
for i in 0:4 do
    print 42
#### output
42.0
42.0
42.0
42.0
#### end



#### exec: infinite loop
i = 0
while true do
    i = i + 1
    if i > 4 do
        break
print i
#### output
5.0
#### end



#### exec: Fibonacci
a = 0
b = 1
while a < 100 do
    print a
    temp = a
    a = b
    b = temp + b
#### output
0.0
1.0
1.0
2.0
3.0
5.0
8.0
13.0
21.0
34.0
55.0
89.0
#### end



#### exec: break in wrong place 1 - fail
break
#### output
-- RuntimeError (E8311) ---------------------------------------------- snippet:1

Can only use break inside a for-loop or while-loop.

1| break
   ^^^^^
#### end



#### exec: expression form
# This does not do anything yet ...
for i in 1:5 its i
#### output

#### end



#### exec: invalid syntax 1 - fail
for i 1:10 do
    print i
#### output
-- SyntaxError (E1208) ----------------------------------------------- snippet:1

Expected 'in' after the loop iterable.

1| for i 1:10 do
         ^
For-loops in Zoof always iterate a variable over a sequence.
The 'in' keyword separates the two.
#### end



#### exec: invalid syntax 2 - fail
for 3 in 1:10 do
    print i
#### output
-- SyntaxError (E1802) ----------------------------------------------- snippet:1

Expected the loop iterable to be a variable.

1| for 3 in 1:10 do
       ^
In 'for x in y', 'x' must be a variable name.
#### end



#### exec: invalid syntax 3 - fail
for i in 1:10 nil
    print i
#### output
-- SyntaxError (E1436) ----------------------------------------------- snippet:1

Expected 'do' or 'its' to define a for-loop.

1| for i in 1:10 nil
                 ^^^

For-loops in Zoof always iterate a variable over a sequence.

The syntax for 'for' has two forms. The (multi-line) statement form, e.g.:

    for i in 0:10 do
        print i

And the (single-line) expression form, e.g.:

    # Note that this form is still a work in progress
    print for i in 0:10 its i
#### end



#### exec: invalid syntax 4 - fail
for i in 1:10 its i else 2
#### output
-- SyntaxError (E1788) ----------------------------------------------- snippet:1

In single-line for-expressions, the else-clause is forbidden.

1| for i in 1:10 its i else 2
                       ^^^^
#### end



#### exec: for-else is not yet supported - fail
for i in 1:10 do
   nil
else
  print "nah"
#### output
-- SyntaxError (E1259) ----------------------------------------------- snippet:3

for-else not (yet?) supported

3| else
   ^^^^
#### end



#### exec: while needs do - fail
while true its 42
#### output
-- SyntaxError (E1901) ----------------------------------------------- snippet:1

Expected 'do' to define a while-loop.

1| while true its 42
              ^^^
Also, the while-loop does not support an expression form using 'its'.
#### end



