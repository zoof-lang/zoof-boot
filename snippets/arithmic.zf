#### exec: literal
3 + 4
#### output
7.0
#### end



#### exec: literal v2
# a comment (this was broken at some point)
3 + 4
#### output
7.0
#### end



#### exec: literal v3 (start with newline)

3 + 4
#### output
7.0
#### end



#### exec: unary -
-3 + 4
#### output
1.0
#### end



#### exec: unary +
+3 + 4
#### output
7.0
#### end



#### exec: unary binds loser than e.g. indexing
# This should be `- (ob.foo)`,  not `(-ob).foo`
- ob.foo
#### end (missing expected output)



#### exec: unary binds loser than e.g. if-expressions
# But still, we don't allow it for readability, use parentheses!
- (if true its 4 else 5)
#### output
-4.0
#### end



#### exec: stack
3 + 4 + 5
#### output
12.0
#### end



#### exec: multiply first
3 + 4 * 2
#### output
11.0
#### end



#### exec: power first
3 + 4 * 2 ^ 3
#### output
35.0
#### end



#### exec: power is right-associative
print 4 ^ 3 ^ 2
print 4 ^ (3 ^ 2)
print (4 ^ 3) ^ 2
#### output
262144.0
262144.0
4096.0
#### end



#### exec: sqrt
4 ^ 0.5
#### output
2.0
#### end



#### exec: power and unary -
4 ^ - 2
#### output
0.0625
#### end



#### exec: unaries can be used inside expressions
print 3 + - 1
print 3 * -2
#### output
2.0
-6.0
#### end



#### exec: unaries do not stack - FAIL
print - - 3
#### output
-- SyntaxError (E1035) ----------------------------------------------- snippet:1

Unaries do not stack.

1| print - - 3
           ^^^
You can do '-4', but not '--4'.
#### end



