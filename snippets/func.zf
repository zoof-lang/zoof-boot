#### exec: simple
func foo(a, b) do
    return a + b

print foo(40, 2)
#### output
42.0
#### end



#### exec: simple no return
func foo(a, b) do
    a + b

print foo(40, 2)
#### output
nil
#### end



#### exec: returns
func islargerthan5(a) do
    if a > 5 do
        return true
    else
        return false

print islargerthan5(3)
print islargerthan5(6)
#### expected output
false
true
#### actual output
-- SyntaxError (E1003) ----------------------------------------------- snippet:5

Expected newline after 'if-else'.

5|         return false
   ^^^^^^^^
After '{context}', further statements are expected on a new indented line.
Perhaps you meant:

    return false
#### end



#### exec: fibonacci
func fib(n) do
  if n <= 1 do
      return n
  return fib(n - 2) + fib(n - 1)

for i in 0:10 do
  print fib(i)
#### output
0.0
1.0
1.0
2.0
3.0
5.0
8.0
13.0
21.0
34.0
#### end



#### exec: lambda 1
foo = func (a, b) its a + b
print foo(2, 9)
#### output
11.0
#### end



#### exec: lambda 2
a = 100
foo = func (b) its a + b
print foo(9)
#### output
109.0
#### end



#### exec: lambda 4
# This lambda starts out as a statement, so the code path is a bit different.
# Not very useful, but in a repl it will be printed, and maybe we'll something
# like Python's '_' to get the last result.
func () its 42
#### expected output
<function bla>
#### actual output
-- SyntaxError (E1014) ----------------------------------------------- snippet:4

Expected function name

4| func () its 42
        ^

The syntax for creating functions has two forms. The (multi-line) statement form, e.g.:

    func foo() do
        print 'hello!'

And the (single-line) expression form, e.g.:

    foo = func() its 'hello!'
#### end



#### exec: lambda direct call 1
print (func () its 42)()
#### output
42.0
#### end



#### exec: lambda direct call 2
print (func () its (func () its 42))()()
#### output
42.0
#### end



#### exec: lambda with if-expression
f = func () its (if false its 3 else 4)
f()
#### output
4.0
#### end



#### exec: lambda with if-expression needs parentheses - fail
f = func () its if false its 3 else 4
f()
#### expected output
In 'snippet', line 1
SyntaxError: if-expression not allowed here, try wrapping it in parentheses: `(...)` at 'if' (Keyword)

1| f = func () its if false its 3 else 4
                   ^^
#### actual output
-- SyntaxError (E1014) ----------------------------------------------- snippet:1

The if-expression not allowed here.

1| f = func () its if false its 3 else 4
                                       ^
Try wrapping it in parentheses: `(...)`.
#### end



#### exec: lambda 3 - fail
# It's harder to track when a lambda is called in the same scope,
# so we don't support late binding for lambdas
foo = func (b) its a + b
a = 100
print foo(9)
#### expected output
In 'snippet', line 3
NameError: Undefined variable at 'a' (Identifier)

3| foo = func (b) its a + b
                      ^
#### actual output
-- NameError (E2000) ------------------------------------------------- snippet:3

Undefined variable

3| foo = func (b) its a + b
                      ^
#### end



#### noop: summary
# See scope_closures.zf for functions that capture free variables.
#### end (no output)



